= hammer-render

== Syntax

Experimental html renderer with Markaby like syntax mixed with Wee::Brushes but faster

    Hammer::FormatedBuilder.new.go_in do
      html do
        head { title 'a title' }
        div.id('menu').class('left') do
          ul do
            li 'home'
            li 'contacts', :class => 'active'
          end
        end
        div.id('content') do
          article.id 'article1' do
            h1 'header'
            p('some text').class('centered')
            div(:class => 'like').with do
              text 'like on '
              strong 'Facebook'
            end
          end
        end

      end
    end.to_html

    # =>
    #<html>
    #  <head>
    #    <title>a title</title>
    #  </head>
    #  <div id="menu" class="left">
    #    <ul>
    #      <li>home</li>
    #      <li class="active">contacts</li>
    #    </ul>
    #  </div>
    #  <div id="content">
    #    <article id="article1">
    #      <h1>header</h1>
    #      <p class="centered">some text</p>
    #      <div class="like">like on
    #        <strong>Facebook</strong>
    #      </div>
    #    </article>
    #  </div>
    #</html>

== Helpers

You can mix it directly to Builder's instance

  require 'active_support'
  require 'action_view'

  Hammer::FormatedBuilder.new.go_in do
    extend ActionView::Helpers::NumberHelper
    div number_with_precision(Math::PI, :precision => 4)
  end.to_html # => <div>3.1416</div>

or make your own Builder

  require 'active_support'
  require 'action_view'

  class MyBuilder < Hammer::FormatedBuilder
    include ActionView::Helpers::NumberHelper
  end

  MyBuilder.new.go_in do
    div number_with_precision(Math::PI, :precision => 4)
  end.to_html # => <div>3.1416</div>

== Extensibility

  class MyBuilder < Hammer::FormatedBuilder

    # define new method to all tags
    redefine_class :abstract_tag do
      def hide!
        self.class 'hidden'
      end
    end

    # add pseudo tag
    define_tag_class :component, :div do
      class_eval <<-RUBYCODE, __FILE__, __LINE__
        def open(id, attributes = nil, &block)
          super(attributes, &nil).id(id).class('component')
          block ? with(&block) : self
        end
      RUBYCODE
    end
  end

  MyBuilder.new.go_in do
    div[:content].with do
      span.id('secret').class('left').hide!
      component('component-1') do
        strong 'something'
      end
    end
  end.to_html

and result is

  <div id="content">
    <span id="secret" class="left hidden"></span>
    <div id="component-1" class="component">
      <strong>something</strong>
    </div>
  </div>


== Benchmark

  Rehearsal -----------------------------------------------------------
  render                    9.860000   0.050000   9.910000 ( 10.123761)
  render3                  13.620000   0.150000  13.770000 ( 13.776032)
  hammer-builder           14.380000   0.080000  14.460000 ( 15.115540)
  hammer-formated_builder  15.220000   0.140000  15.360000 ( 16.082755)
  erubis                   36.320000   0.430000  36.750000 ( 36.711809)
  erubis-cache              6.870000   0.060000   6.930000 (  6.916125)
  fasterubis               32.450000   0.450000  32.900000 ( 32.863444)
  fasterubis-cache          6.830000   0.110000   6.940000 (  6.930100)
  erector                  27.440000   0.130000  27.570000 ( 27.659199)
  markaby                  74.140000   0.360000  74.500000 ( 75.055798)
  tagz                    107.470000   0.540000 108.010000 (110.084888)
  ------------------------------------------------ total: 347.100000sec

                                user     system      total        real
  render                    8.520000   0.000000   8.520000 (  8.571273)
  render3                  14.520000   0.050000  14.570000 ( 15.170556)
  hammer-builder           12.770000   0.060000  12.830000 ( 12.960808)
  hammer-formated_builder  14.800000   0.040000  14.840000 ( 14.872344)
  erubis                   43.660000   0.180000  43.840000 ( 44.393090)
  erubis-cache              8.930000   0.000000   8.930000 (  8.999236)
  fasterubis               41.530000   0.530000  42.060000 ( 42.315356)
  fasterubis-cache          8.930000   0.120000   9.050000 (  9.037040)
  erector                  32.520000   0.290000  32.810000 ( 33.065815)
  markaby                  62.330000   0.180000  62.510000 ( 62.725164)
  tagz                    128.950000   0.490000 129.440000 (131.672044)